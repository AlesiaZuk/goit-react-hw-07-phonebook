{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Section/Section.js","redux/phonebook/phonebook-selectors.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","deleteContact","filterContact","contacts","createReducer","state","payload","id","keyGenerate","name","number","filter","contact","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","reduser","persistor","persistStore","Section","title","children","className","s","section","getContacts","getFilter","getFilteredContacts","toLowerCase","includes","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","find","alert","handleAddContact","form_label","form_input","type","onChange","placeholder","pattern","required","form_button","Contacts","filterContacts","handleDeleteContact","map","contacts_item","contacts_text","contacts_button","onClick","Filter","filter_label","filter_input","sectionClass","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b680a1e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_item\":\"Contacts_contacts_item__1UcH3\",\"contacts_text\":\"Contacts_contacts_text__2HXpc\",\"contacts_button\":\"Contacts_contacts_button__224i5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__19U79\",\"title\":\"Section_title__2garj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__27KE4\",\"filter_input\":\"Filter_filter_input__2_s7E\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contact/add');\nexport const deleteContact = createAction('contact/delete');\nexport const filterContact = createAction('contact/filter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContact } from './phonebook-actions';\nimport { v4 as keyGenerate } from 'uuid';\n\nconst contacts = createReducer([], {\n  [addContact]: (state, { payload }) => [\n    ...state,\n    { id: keyGenerate(), name: payload.name, number: payload.number },\n  ],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload.id),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport reduser from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: persistReducer(persistConfig, reduser),\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","export const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\n\nimport s from './Form.module.css';\n\nfunction Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  function handleAddContact({ name, number }) {\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    handleAddContact({ name, number });\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.form_label}>\n        Name:\n        <input\n          className={s.form_input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Name Lastname\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.form_label}>\n        Number\n        <input\n          className={s.form_input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"Phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={s.form_button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selectors';\nimport s from './Contacts.module.css';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(getFilteredContacts);\n\n  const handleDeleteContact = e => {\n    const { id } = e.target;\n    dispatch(deleteContact({ id }));\n  };\n\n  return (\n    <ul>\n      {filterContacts.map(({ id, name, number }) => (\n        <li className={s.contacts_item} key={id}>\n          <p className={s.contacts_text}>\n            {name}: {number}\n          </p>\n          <button\n            className={s.contacts_button}\n            id={id}\n            type=\"button\"\n            onClick={handleDeleteContact}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default Contacts;\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/phonebook/phonebook-actions';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <label className={s.filter_label}>\n      Find contacts by name:\n      <input\n        className={s.filter_input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"Name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import Section from './components/Section/Section';\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\n\nconst sectionClass = ['section'];\n\nfunction App() {\n  return (\n    <section className={sectionClass}>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <Contacts></Contacts>\n      </Section>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_label\":\"Form_form_label__30btW\",\"form_input\":\"Form_form_input__1VOH4\",\"form_button\":\"Form_form_button__2tqd9\"};"],"sourceRoot":""}